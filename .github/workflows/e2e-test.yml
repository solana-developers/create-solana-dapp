name: Test Templates

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.ref }}
  cancel-in-progress: true

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**/*.md'
  pull_request:
    paths-ignore:
      - '**/*.md'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [20, 22]
        pm: [npm, pnpm, yarn]
        template: [
            # TODO: Make these values dynamic by adding a parameter to CLI
            template-next-tailwind,
            template-next-tailwind-basic,
            template-next-tailwind-counter,
            template-node-express,
            template-node-script,
            template-react-vite-tailwind,
            template-react-vite-tailwind-basic,
            template-react-vite-tailwind-counter,
            web3js-expo,
            web3js-expo-paper,
            legacy-next-tailwind,
            legacy-next-tailwind-basic,
            legacy-next-tailwind-counter,
            legacy-react-vite-tailwind,
            legacy-react-vite-tailwind-basic,
            legacy-react-vite-tailwind-counter,
          ]

    steps:
      - name: Setup Anchor
        uses: metadaoproject/setup-anchor@v3.1
        with:
          anchor-version: '0.30.1'
          solana-cli-version: '2.0.21'
          node-version: ${{ matrix.node }}
      - name: Configure Git identity
        run: |
          git config --global user.email "ci-bot@example.com"
          git config --global user.name "CI Bot"
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          run_install: false
      - uses: actions/setup-node@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}

      - run: pnpm install
      - run: pnpm build

      - name: Install package manager (if needed)
        run: |
          case ${{ matrix.pm }} in
            npm) echo "Using npm";;
            pnpm) npm install -g pnpm;;
            yarn) npm install -g yarn;;
          esac

      - name: Create and Build using create-solana-dapp
        run: |
          TEMP_DIR=$(mktemp -d)
          cd "$TEMP_DIR"

          CLI_PATH="${{ github.workspace }}/dist/bin/index.cjs"

          case ${{ matrix.pm }} in
          npm)  node "$CLI_PATH" --template ${{ matrix.template }} sandbox ;;
          pnpm) node "$CLI_PATH" --template ${{ matrix.template }} sandbox --pnpm ;;
          yarn) node "$CLI_PATH" --template ${{ matrix.template }} sandbox --yarn ;;
          esac

          cd sandbox
          ${{ matrix.pm }} install
          ${{ matrix.pm }} run build
